server {
    listen 80;
    server_name cdn.${DOMAIN};

    # Redirect HTTP to HTTPS
    return 308 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name cdn.${DOMAIN};

    ssl_certificate ${CERTS_PATH}/fullchain.pem;
    ssl_certificate_key ${CERTS_PATH}/privkey.pem;

    # Serve a simple message for HTTPS requests
    location / {
        return 200 '<html><body><h1>This domain is used for CDN purposes only.</h1></body></html>';
        add_header Content-Type text/html;
    }
}

server {
    listen 80;
    server_name ${DOMAIN};

    location / {
        proxy_pass http://${ORIGIN_SERVER};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 443 ssl;
    server_name ${DOMAIN};

    ssl_certificate ${CERTS_PATH}/fullchain.pem;
    ssl_certificate_key ${CERTS_PATH}/privkey.pem;

    location / {
        proxy_pass http://${ORIGIN_SERVER};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
